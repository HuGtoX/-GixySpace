{"version":3,"sources":["../src/index.ts","../src/rules/predicates.ts","../src/rules/load-rule.ts","../src/rules/no-unused-imports.ts","../src/rules/no-unused-vars.ts"],"sourcesContent":["import noUnusedImports from './rules/no-unused-imports';\nimport noUnusedVars from './rules/no-unused-vars';\n\nimport { ESLint } from 'eslint';\n\n// 定义插件的规则\n\nconst plugin: ESLint.Plugin = {\n\tmeta: {\n\t\tname: 'unused-imports'\n\t},\n\trules: {\n\t\t'no-unused-vars': noUnusedVars,\n\t\t'no-unused-imports': noUnusedImports\n\t}\n};\n\nexport default plugin;\n","import { SourceCode, AST, Rule } from 'eslint';\r\n\r\nexport type Predicate = (\r\n\tproblem: Rule.ReportDescriptor,\r\n\tcontext: Rule.RuleContext\r\n) => Rule.ReportDescriptor | false;\r\n\r\nconst commaFilter = { filter: (token: AST.Token) => token.value === ',' };\r\nconst includeCommentsFilter = { includeComments: true };\r\n\r\nfunction makePredicate(\r\n\tisImport: boolean,\r\n\taddFixer?: (\r\n\t\tparent: any,\r\n\t\tsourceCode: SourceCode\r\n\t) => Partial<Rule.ReportDescriptor> | boolean\r\n): Predicate {\r\n\treturn (problem, context) => {\r\n\t\tconst sourceCode = context.sourceCode || context.getSourceCode();\r\n\r\n\t\tconst { parent } =\r\n\t\t\t(problem as any).node ??\r\n\t\t\t// typescript-eslint >= 7.8 sets a range instead of a node\r\n\t\t\t// getNodeByRangeIndex(index)：返回 AST 中包含指定源索引的最深节点。\r\n\t\t\tsourceCode.getNodeByRangeIndex(\r\n\t\t\t\t// getIndexFromLoc(loc)：返回源代码中给定位置的索引，其中 loc 是一个对象，有一个基于 1 的 line 键和一个基于 0 的 column 键。\r\n\t\t\t\tsourceCode.getIndexFromLoc((problem as any).loc.start)\r\n\t\t\t);\r\n\t\treturn parent\r\n\t\t\t? /^Import(|Default|Namespace)Specifier$/.test(parent.type) ==\r\n\t\t\t\tisImport\r\n\t\t\t\t? Object.assign(problem, addFixer?.(parent, sourceCode))\r\n\t\t\t\t: false\r\n\t\t\t: isImport\r\n\t\t\t\t? false\r\n\t\t\t\t: problem;\r\n\t};\r\n}\r\n\r\nexport const unusedVarsPredicate = makePredicate(false);\r\n\r\nexport const unusedImportsPredicate = makePredicate(\r\n\ttrue,\r\n\t(parent, sourceCode) => ({\r\n\t\tfix(fixer) {\r\n\t\t\tconst grandParent = parent.parent;\r\n\r\n\t\t\tif (!grandParent) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Only one import\r\n\t\t\tif (grandParent.specifiers.length === 1) {\r\n\t\t\t\tconst nextToken = sourceCode.getTokenAfter(\r\n\t\t\t\t\tgrandParent,\r\n\t\t\t\t\tincludeCommentsFilter\r\n\t\t\t\t);\r\n\t\t\t\tconst newLinesBetween = nextToken\r\n\t\t\t\t\t? nextToken.loc!.start.line - grandParent.loc.start.line\r\n\t\t\t\t\t: 0;\r\n\t\t\t\tconst endOfReplaceRange = nextToken\r\n\t\t\t\t\t? nextToken.range![0]\r\n\t\t\t\t\t: grandParent.range[1];\r\n\t\t\t\tconst count = Math.max(0, newLinesBetween - 1);\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\tfixer.remove(grandParent),\r\n\t\t\t\t\tfixer.replaceTextRange(\r\n\t\t\t\t\t\t[grandParent.range[1], endOfReplaceRange],\r\n\t\t\t\t\t\t'\\n'.repeat(count)\r\n\t\t\t\t\t)\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\t// Not last specifier\r\n\t\t\tif (\r\n\t\t\t\tparent !==\r\n\t\t\t\tgrandParent.specifiers[grandParent.specifiers.length - 1]\r\n\t\t\t) {\r\n\t\t\t\tconst comma = sourceCode.getTokenAfter(parent, commaFilter)!;\r\n\t\t\t\tconst prevNode = sourceCode.getTokenBefore(parent)!;\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\tfixer.removeRange([prevNode.range[1], parent.range![0]]),\r\n\t\t\t\t\tfixer.remove(parent),\r\n\t\t\t\t\tfixer.remove(comma)\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\t\t\t// Default export and a single normal left, ex. \"import default, { package1 } from 'module';\"\r\n\t\t\tif (\r\n\t\t\t\tgrandParent.specifiers.filter(\r\n\t\t\t\t\t(specifier) => specifier.type === 'ImportSpecifier'\r\n\t\t\t\t).length === 1\r\n\t\t\t) {\r\n\t\t\t\tconst start = sourceCode.getTokenBefore(parent, commaFilter)!;\r\n\t\t\t\tconst end = sourceCode.getTokenAfter(parent, {\r\n\t\t\t\t\tfilter: (token) => token.value === '}'\r\n\t\t\t\t})!;\r\n\r\n\t\t\t\treturn fixer.removeRange([start.range[0], end.range[1]]);\r\n\t\t\t}\r\n\r\n\t\t\treturn fixer.removeRange([\r\n\t\t\t\tsourceCode.getTokenBefore(parent, commaFilter)!.range[0],\r\n\t\t\t\tparent.range[1]\r\n\t\t\t]);\r\n\t\t}\r\n\t})\r\n);\r\n\r\nexport function createRuleWithPredicate(\r\n\tname: string,\r\n\tbaseRule: Rule.RuleModule,\r\n\tpredicate: Predicate\r\n): Rule.RuleModule {\r\n\treturn {\r\n\t\t...baseRule,\r\n\t\tmeta: {\r\n\t\t\t...baseRule.meta,\r\n\t\t\tfixable: 'code',\r\n\t\t\tdocs: {\r\n\t\t\t\t...baseRule.meta?.docs,\r\n\t\t\t\turl: `https://github.com/sweepline/eslint-plugin-unused-imports/blob/master/docs/rules/${name}.md`\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreate(context) {\r\n\t\t\treturn baseRule.create(\r\n\t\t\t\tObject.create(context, {\r\n\t\t\t\t\treport: {\r\n\t\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\t\tvalue(problem: Rule.ReportDescriptor) {\r\n\t\t\t\t\t\t\tconst result = predicate(problem, context);\r\n\t\t\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\t\t\tcontext.report(result);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n}\r\n","import { Rule } from 'eslint';\r\nimport { createRequire } from 'module';\r\n\r\nlet rule: Rule.RuleModule | undefined;\r\n\r\nconst require = createRequire(import.meta.url);\r\n\r\nexport function getBaseRule(): Rule.RuleModule {\r\n\tif (!rule) {\r\n\t\ttry {\r\n\t\t\tconst tslint = require('@typescript-eslint/eslint-plugin');\r\n\t\t\trule = tslint.rules['no-unused-vars'];\r\n\t\t} catch (_) {\r\n\t\t\trule = getESLintBaseRule();\r\n\t\t}\r\n\t}\r\n\treturn rule!;\r\n}\r\n\r\nexport function getESLintBaseRule() {\r\n\tconst eslint = require('eslint');\r\n\treturn new eslint.Linter({ configType: 'eslintrc' })\r\n\t\t.getRules()\r\n\t\t.get('no-unused-vars');\r\n}\r\n","/**\r\n * @fileoverview Add fixer to imports in no-unused-vars.\r\n * @author Mikkel Holmer Pedersen <mikkel@holmerp.dk>\r\n */\r\nimport { unusedImportsPredicate, createRuleWithPredicate } from './predicates';\r\n\r\nimport { getBaseRule } from './load-rule';\r\n\r\nexport default createRuleWithPredicate(\r\n\t'no-unused-imports',\r\n\tgetBaseRule(),\r\n\tunusedImportsPredicate\r\n);\r\n","/**\r\n * @fileoverview Filter imports from no-unused-vars.\r\n * @author Mikkel Holmer Pedersen <mikkel@holmerp.dk>\r\n */\r\nimport { createRuleWithPredicate, unusedVarsPredicate } from './predicates';\r\n\r\nimport { getBaseRule } from './load-rule';\r\n\r\nexport default createRuleWithPredicate(\r\n\t'no-unused-vars',\r\n\tgetBaseRule(),\r\n\tunusedVarsPredicate\r\n);\r\n"],"mappings":"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","names":["require"]}